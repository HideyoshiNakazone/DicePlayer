                                                                                                                                                      # This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Upload DicePlayer to PyPI

on:
    push

permissions:
    contents: read

jobs:

    test:
        runs-on: ubuntu-latest
        steps:
            -   uses: actions/checkout@v3
                with:
                    fetch-depth: 0
            -   name: Install poetry
                run: pipx install poetry

            -   name: Set up Python 3.10
                uses: actions/setup-python@v3
                with:
                    python-version: "3.10"
            -   name: Install dependencies
                run: |
                    poetry self add "poetry-dynamic-versioning[plugin]"
                    if [ -f pyproject.toml ]; then poetry install; fi
            -   name: Run unittest
                run: |
                    poetry run python -m unittest

    pypi-upload:
        needs: [test]
        if: startsWith(github.ref, 'refs/tags/v')
        runs-on: ubuntu-latest
        steps:
            -   uses: actions/checkout@v3
                with:
                    fetch-depth: 0
            -   name: Install poetry
                run: pipx install poetry

            -   name: Set up Python 3.10
                uses: actions/setup-python@v3
                with:
                    python-version: "3.10"
            -   name: Install dependencies
                run: |
                    poetry self add "poetry-dynamic-versioning[plugin]"
                    if [ -f pyproject.toml ]; then poetry install; fi
            -   name: Build Python Package
                run: |
                    poetry build -f sdist
                    poetry install
                    echo "Builded yoshi-seals - $(poetry version)"
            -   name: Configure PyPI
                run: |
                    poetry config repositories.pypi https://upload.pypi.org/legacy/
                    poetry config pypi-token.pypi ${{secrets.PYPI_TOKEN}}
            -   name: Upload Python Package
                run: |
                    poetry publish --repository pypi